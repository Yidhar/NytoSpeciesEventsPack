namespace = GF_nyto_operation
espionage_operation_event = {
	id = GF_nyto_operation.01
	title = GF_nyto_operation.01.name
	desc = GF_nyto_operation.01.desc
	espionage_operation = yes
	picture = GFX_evt_spy_network
	show_sound = event_default
	is_triggered_only = yes
	# this = operation; from = target (country)
	immediate = {
		set_espionage_operation_progress_locked = yes
		target = {
			random_owned_pop = {
				limit = {
					NOT = {
						has_pop_flag = operation_nyto_pop
					}
				}
				root.owner ={
					country_event ={ id = GF_nyto_operation.10001 days = 1 }
				}
				set_pop_flag = operation_nyto_pop
				root.owner = {
					create_message = {
						type = EVENT_MESSAGE_TYPE
						localization = operation_nyto_pop_message
						days = 5
						target = prev.planet
					}
				}
			}
			random = {
				chance = 5
				random_owned_leader = {
					set_leader_flag = operation_nyto_leader
					root.owner = {
						create_message = {
							type = EVENT_MESSAGE_TYPE
							localization = operation_nyto_pop_message3
							days = 30
							target = prev
						}
					}
				}
			}
			reroll_random = yes
		}

	}
	option = {
		name = ACKNOWLEDGED
	}
	after = {
		set_espionage_operation_progress_locked = no
	}
}

espionage_operation_event = {
	id = GF_nyto_operation.02
	title = GF_nyto_operation.02.name
	desc = GF_nyto_operation.02.desc
	espionage_operation = yes
	picture = GFX_evt_spy_network
	show_sound = event_default
	is_triggered_only = yes
	immediate = {
	}
	option = {
		name = ACKNOWLEDGED
	}
}

espionage_operation_event = {
	id = GF_nyto_operation.03
	title = GF_nyto_operation.03.name
	desc = GF_nyto_operation.03.desc
	espionage_operation = yes
	picture = GFX_evt_spy_network
	show_sound = event_default
	is_triggered_only = yes
	immediate = {
	}
	option = {
		name = ACKNOWLEDGED
	}
}

espionage_operation_event = {
	id = GF_nyto_operation.04
	title = GF_nyto_operation.04.name
	desc = GF_nyto_operation.04.desc
	espionage_operation = yes
	picture = GFX_evt_spy_network
	show_sound = event_default
	is_triggered_only = yes
	immediate = {
		#创建暴乱or游行
		target = {
			#每个渗透人口有20%概率触发游行 10%触发暴乱
			every_owned_planet = {
				limit = {
					any_owned_pop = { has_pop_flag = operation_nyto_pop }
				}
				export_trigger_value_to_variable = {
					trigger = count_owned_pop
					parameters = {
						limit = {
							has_pop_flag = operation_nyto_pop
						}
					}
					variable = operation_nyto_pop
				}
				if = {
					limit = {
						check_variable_arithmetic = { which = operation_nyto_pop divide = trigger:count_owned_pop value > 0.3  }
						has_ground_combat = no
					}
					root.owner ={
						create_message = {
							type = PLANET_REVOLT
							localization = operation_nyto_pop_message_2
							days = 30
							target = prev
						}
					}
					planet_event = {
						id = GF_nyto_operation.40001
						days = 1
					}
				}
				else_if = {
					limit = {
						not = {
							has_modifier = GF_nyto_oper_pop
						}
					}
					root.owner ={
						create_message = {
							type = PLANET_REVOLT
							localization = operation_nyto_pop_message_3
							days = 30
							target = prev
						}
					}
					planet_event = {
						id = GF_nyto_operation.40002
						days = 1
					}
				}

			}
		}
	}
	option = {
		name = ACKNOWLEDGED
	}
}

#暴乱
planet_event = {
	id = GF_nyto_operation.40001
	title = GF_nyto_operation.40001.name
	desc = GF_nyto_operation.40001.desc
	picture = GFX_evt_burning_settlement
	is_triggered_only = yes
	trigger = {
	}
	immediate = {
		set_planet_flag = retrovirus_armies
		random_owned_pop = {
			limit = {
				has_modifier = erratic_behavior
			}
			species = {
				save_event_target_as = infected_species
			}
		}
		if = {
			limit = {
				NOT = {
					exists = event_target:enraged_colonists_country
				}
			}
				create_country = {
					name = "NAME_Enraged_Colonists"
					type = faction
					auto_delete = yes
					flag = {
						background = {
							category = "backgrounds"
							file = "00_solid.dds"
						}
						colors = {
							"red"
							"red"
							"null"
							"null"
						}
					}
					effect = {
						establish_communications_no_message = root.owner
						establish_contact = {
							who = root.owner
							location = root.solar_system
						}
						copy_techs_from = {
							target = root.owner
						}
					}
				}

			last_created_country = {
				save_global_event_target_as = enraged_colonists_country
			}
		}
		while = {
			count = planet.operation_nyto_pop
			create_army = {
				name = "rebel_army"
				owner = event_target:enraged_colonists_country
				species = event_target:infected_species
				type = "rebel_army"
			}
			create_army = {
				name = "rebel_army"
				owner = event_target:enraged_colonists_country
				species = event_target:infected_species
				type = "rebel_army"
			}
			create_army = {
				name = "rebel_army"
				owner = event_target:enraged_colonists_country
				species = event_target:infected_species
				type = "new_world_order_defensive_army"
			}
		}
	}
	option = {
		name = GF_nyto_operation.40001.a
	}
	after = {
		destroy_espionage_operation = from
	}
}

#游行
planet_event = {
	id = GF_nyto_operation.40002
	title = GF_nyto_operation.40002.name
	desc = GF_nyto_operation.40002.desc
	picture = GFX_evt_grand_speech #a name of a picture to display
	is_triggered_only = yes 
	immediate = {
		add_modifier = {
			modifier = GF_nyto_oper_pop
			days = 10
			time_multiplier = planet.operation_nyto_pop
		}
	}
	option = {
		name = GF_nyto_operation.40002.a
	}
	after = {
		destroy_espionage_operation = from
	}
}


#获得领袖时发送通知
country_event = {
	id = GF_nyto_operation.10001
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		GF_nyto_creat_esp_asset = yes
	}
	after = {
		destroy_espionage_operation = from
	}
}


#渗透领袖被解雇时克隆并转移归属