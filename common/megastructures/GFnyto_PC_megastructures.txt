#恒星坍塌器基址
GFnyto_megastructure_collapse_reactor_ruined = {
	entity = "construction_platform_entity"
	entity_offset = { x = -7 y = -7 }
	construction_entity = "construction_platform_entity"
	build_time = 1800
	resources = {
		category = megastructures
		cost = {
			alloys = 5000
		}
		upkeep = {
			energy = 10
		}
	}
	possible = {
		exists = starbase
		custom_tooltip = {
			fail_text = "requires_inside_border"
			is_inside_border = from
		}
		custom_tooltip = {
			fail_text = "requires_surveyed_system"
			NOT = {
				any_system_planet = {
					is_surveyed = {
						who = prev.from
						status = no
					}
				}
			}
		}
		custom_tooltip = {
			fail_text = "requires_no_binary_trinary"
			NOR = {
				is_star_class = sc_binary_1
				is_star_class = sc_binary_2
				is_star_class = sc_binary_3
				is_star_class = sc_binary_4
				is_star_class = sc_binary_5
				is_star_class = sc_binary_6
				is_star_class = sc_binary_7
				is_star_class = sc_binary_8
				is_star_class = sc_binary_9
				is_star_class = sc_binary_10
				is_star_class = sc_trinary_1
				is_star_class = sc_trinary_2
				is_star_class = sc_trinary_3
				is_star_class = sc_trinary_4
			}
		}
		solar_system = {
			custom_tooltip = {
				fail_text = "requires_no_black_hole_or_dyson_sphere"
				NOR = {
					is_star_class = sc_black_hole
					has_megastructure = dyson_sphere_3
					has_megastructure = dyson_sphere_4
					has_megastructure = dyson_sphere_5
				}
			}
		}
	}
	placement_rules = {
		planet_possible = {
			custom_tooltip = {
				fail_text = "must_build_around_star"
				is_star = yes
			}
			custom_tooltip = {
				fail_text = "requires_no_existing_megastructure"
				NOT = {
					has_any_megastructure = yes
				}
			}
		}
	}
	potential = {
		has_technology = tech_GFnyto_star_tasuo
	}
	show_prereqs = yes
	prerequisites = {
		"tech_GFnyto_star_tasuo"
	}
}

#恒星坍塌器
GFnyto_megastructure_collapse_reactor_restored = {
	entity = "nova_ring_entity"
	construction_entity = nova_ring_entity
	portrait = "GFX_GFnyto_megastructure_collapse_reactor"
	build_time = 720
	resources = {
		category = megastructures
		cost = {
			alloys = 10000
		}
		produces = {
			GF_nyto_collapse_liquid = 4000
			physics_research = 1000
			society_research = 1000
			engineering_research = 1000
		}
		upkeep = {
			energy = 1000
		}
	}
	upgrade_from = {
		GFnyto_megastructure_collapse_reactor_ruined
	}
	possible = {
		from = {
			has_technology = tech_mega_engineering
			has_technology = tech_GF_nyto_collapse_stability_2
		}
	}
	on_build_complete = {
		fromfrom.planet = {
			set_planet_size = 12
		}
		solar_system = {
			set_star_class = sc_black_hole
		}
	}
}

#坍塌点
GFnyto_lgate_base = {
	entity = ""
	construction_entity = ""
	portrait = "GFX_megastructure_construction_background"
	place_entity_on_planet_plane = no
	show_galactic_map_icon = no
	potential = {
		always = no
	}
	possible = {
		custom_tooltip = {
			fail_text = "we_cannot_break_through_the_singularity"
			from = {
				has_ascension_perk = ap_GF_nyto_conquer_hell
			}
		}
	}
	construction_blocks_others = no
	bypass_type = gateway
	on_build_complete = {
		activate_gateway = fromfrom
	}
}


# #部署远程火力基点
# GFnyto_beacon_weapon_01 ={
# 	entity_offset = { x = -7 y = -7 }
# 	entity = "construction_platform_entity"
# 	construction_entity = "construction_platform_entity"
# 	build_time = 1800
# 	resources = {
# 		category = megastructures
# 		cost = {
# 			alloys = 5000
# 		}
# 		upkeep = {
# 			energy = 10
# 		}
# 	}
# 	possible = {
# 		exists = starbase
# 		custom_tooltip = {
# 			fail_text = "requires_inside_border"
# 			is_inside_border = from
# 		}
# 		custom_tooltip = {
# 			fail_text = "requires_surveyed_system"
# 			NOT = {
# 				any_system_planet = {
# 					is_surveyed = {
# 						who = prev.from
# 						status = no
# 					}
# 				}
# 			}
# 		}
# 		custom_tooltip = {
# 			fail_text = "requires_no_binary_trinary"
# 			NOR = {
# 				is_star_class = sc_binary_1
# 				is_star_class = sc_binary_2
# 				is_star_class = sc_binary_3
# 				is_star_class = sc_binary_4
# 				is_star_class = sc_binary_5
# 				is_star_class = sc_binary_6
# 				is_star_class = sc_binary_7
# 				is_star_class = sc_binary_8
# 				is_star_class = sc_binary_9
# 				is_star_class = sc_binary_10
# 				is_star_class = sc_trinary_1
# 				is_star_class = sc_trinary_2
# 				is_star_class = sc_trinary_3
# 				is_star_class = sc_trinary_4
# 			}
# 		}
# 		solar_system = {
# 			custom_tooltip = {
# 				fail_text = "requires_no_black_hole_or_dyson_sphere"
# 				NOR = {
# 					is_star_class = sc_black_hole
# 					has_megastructure = dyson_sphere_3
# 					has_megastructure = dyson_sphere_4
# 					has_megastructure = dyson_sphere_5
# 				}
# 			}
# 		}
# 	}
# 	placement_rules = {
# 		planet_possible = {
# 			custom_tooltip = {
# 				fail_text = "must_build_around_star"
# 				is_star = yes
# 			}
# 			custom_tooltip = {
# 				fail_text = "requires_no_existing_megastructure"
# 				NOT = {
# 					has_any_megastructure = yes
# 				}
# 			}
# 		}
# 	}
# 	potential = {
# 		has_technology = tech_GFnyto_star_tasuo
# 	}
# 	show_prereqs = yes
# 	prerequisites = {
# 		"tech_template_beacon_weapon"
# 	}
# }

# #超视界支援系统 ：待机
# GFnyto_beacon_weapon_02 = {
# 	entity = ps_en_1
# 	construction_entity = error_entity
# 	build_time = 3600	
# 	resources = {
# 		category = megastructures
# 		cost = {
# 			alloys = 5000
# 		}
# 		upkeep = {
# 			energy = 10
# 		}
# 	}
# 	upgrade_from = {
# 		GFnyto_beacon_weapon_01
# 	}
# 	upgrade_desc = "部署超视界系统节点"
# }
# #超视界支援系统: 开火
# GFnyto_beacon_weapon_03 ={
# 	entity = "ps_en_2"
# 	construction_entity = error_entity_fire
# 	build_time = 1
# 	possible = {
# 		always = no
# 	}
# 	potential = {
# 		always = no
# 	}
# 	country_modifier = {
# 		weapon_type_beacon_weapon_fire_rate_mult = 1
# 	}
# 	resources = {
# 		category = megastructures
# 		upkeep = {
# 			energy = 500
# 		}
# 	}
# }

#永恒要塞建造基址
GFnyto_stions_fortress_base ={
	entity = "construction_platform_entity"
	construction_entity = "construction_platform_entity"
	place_entity_on_planet_plane = no
	build_outside_gravity_well = yes
	build_time = 1080
	resources = {
		category = megastructures
		cost = {
			trigger = {
				NOT = {
					has_civic = civic_GF_nyoto_armor_train
				}
			}
			alloys = 2500
			unity = 500
			GF_nyto_new_fire_control_unit = 300
			GF_nyto_collapse_liquid = 1000
		}
		cost = {
			trigger = {
				has_civic = civic_GF_nyoto_armor_train
			}
			alloys = 1500
		}
	}
	construction_blocks_and_blocked_by = none
	potential = {
		has_technology = tech_gateway_construction
	}

	possible = {
		exists = starbase
		custom_tooltip = {
			fail_text = "requires_inside_border"
			is_inside_border = from
		}
		custom_tooltip = {
			fail_text = "requires_surveyed_system"
			NOT = {
				any_system_planet = {
					is_surveyed = {
						who = prev.from
						status = no
					}
				}
			}
		}
		custom_tooltip = {
			from = { has_technology = tech_template_stions_fortress }
		}
	}
	upgrade_desc = "建造永恒要塞"
	prerequisites = {
		"tech_template_stions_fortress"
	}
}

GFnyto_stions_fortress_up={
	entity = stions_entity
	construction_entity = stions_entity
	build_time = 2080
	resources = {
		category = megastructures
		cost = {
			trigger = {
				owner = {
					is_ai = no	
					NOT = {
						 has_civic = civic_GF_nyoto_armor_train
					}			
				}
			}
			alloys = 10000
		}
		cost = {
			trigger = {
				owner = {
					is_ai = no	
					has_civic = civic_GF_nyoto_armor_train						
				}
			}
			alloys = 5000
		}

		cost = {
			trigger = {
				owner = {
					is_ai = yes
				}
			}
			alloys = 2000
		}
	}
	upgrade_from = {
		GFnyto_stions_fortress_base
	}
	on_build_complete = {
		create_fleet = {
			effect = {				
				set_owner = from
				set_location = fromfrom
				create_ship = {
					name = "永恒要塞"
					random_existing_design = GFnyto_stions_fortress
				}
			}
		}	
		delete_megastructure = fromfrom
	}
	ai_weight = {
		weight = 1
		modifier = {
			factor = 100
			owner = {
				has_country_resource = {
					type = alloys
					amount > 10000
				}
			}
			
		}
	}
}

GFnyto_habitat_01 ={
	entity = "construction_platform_entity"
	construction_entity = "construction_platform_entity"
	show_galactic_map_icon = no
	entity_offset = { x = -7 y = -7 }
	potential = {
		owner = {
			has_authority = auth_GF_paradeus
		}
	}
	placement_rules = {
		planet_possible = {
			custom_tooltip = {
				fail_text = "requires_surveyed_planet"
				is_surveyed = {			# prevent leaking habitability information
					who = prev.from
					status = yes
				}
			}
			custom_tooltip = {
				fail_text = "requires_no_anomaly"
				NOT = { has_anomaly = yes }
			}
			custom_tooltip = {
				fail_text = "requires_no_existing_megastructure"
				#can_build_megastructure_on_planet = yes
				NOR = {
					has_planet_flag = megastructure
					has_planet_flag = has_megastructure
					solar_system = {
						has_star_flag = ring_world_built
					}
					is_planet_class = pc_ringworld_habitable
					is_planet_class = pc_ringworld_habitable_damaged
					is_planet_class = pc_ringworld_tech
					is_planet_class = pc_ringworld_tech_damaged
					is_planet_class = pc_ringworld_seam
					is_planet_class = pc_ringworld_seam_damaged
					is_planet_class = pc_habitat
				}
			}

			# balance for habitats
			custom_tooltip = {
				fail_text = "requires_not_minor_planetary_body"
				NOR = {
					is_asteroid = yes
					is_moon = yes
				}
			}
			custom_tooltip = {
				fail_text = "requires_not_star"
				is_star = no
			}
			if = {
				limit = { 
					from = { is_ai = yes }
				}
				or = {
					has_deposit_for = shipclass_mining_station
	 				has_deposit_for = shipclass_research_station
				}
			}
		} # use these for all non-star megastructures
	}
	resources = {
		category = megastructures_habitat
		cost = {
			alloys = 5000
		}
	}
	on_build_complete = {
		fromfrom = {
			upgrade_megastructure_to = GFnyto_habitat_02
		}
		from = {
			add_resource = {
				alloys = -1000
			}
		}
	}
	prerequisites = {
		"tech_template_GF_nyto_orbit_stions"
	}
	ai_weight = {
		weight = 0
	}
}

GFnyto_habitat_02 ={
	entity = ""
	show_galactic_map_icon = yes
	construction_entity = "habitat_phase_01_entity"
	portrait = "GFX_GFnyto_megastructure_habitat"
	show_galactic_map_icon = no
	ship_modifier = {
		ship_starting_experience_add = 200
	}
	station_modifier = {
		starbase_shipyard_capacity_add = 20
		starbase_shipyard_build_speed_mult = 1
	}
	prerequisites = {
		"tech_template_GF_nyto_orbit_stions"
	}
	place_entity_on_planet_plane = yes
	entity_offset = { x = -7 y = -7 }
	build_time = 1800
	upgrade_from = {
		GFnyto_habitat_01
	}
	resources = {
		category = megastructures_habitat
		cost = {
			alloys = 1500
			influence = 150
		}
	}
	construction_blocks_and_blocked_by = none
	potential = {
		OR = {
			has_technology = tech_habitat_1
			has_civic = civic_diadochi
			has_civic = civic_great_khans_legacy
			has_country_flag = democratic_khanate_flag
		}
	}
	on_build_complete = {
		if = {
			limit = {
				owner = { 	NOT = { has_authority = auth_GF_paradeus } }
			}
			spawn_planet = {
				class = "pc_habitat"
				location = fromfrom.planet
				orbit_location = yes
				orbit_angle_offset = 45
				orbit_distance_offset = 9.899
				size = 4
				has_ring = yes
				init_effect = {
					set_name = {
						key = HABITAT_PLANET_NAME
						variable_string = "[FROM.from.planet.GetName]"
					}
					set_planet_entity = {
						entity = "habitat_phase_01_entity"
						graphical_culture = fromfrom
					}
					set_surveyed = {
						surveyed = yes
						surveyor = FROM
					}
					set_all_comms_surveyed = yes
					clear_blockers = yes
					start_colony = {
						owner = root
					}
					set_planet_flag = megastructure
					set_planet_flag = habitat
	
					if = {
						limit = {
							fromfrom.planet = {
								OR = {
									has_deposit = d_minerals_1
									has_deposit = d_minerals_2
									has_deposit = d_minerals_3
									has_deposit = d_minerals_4
									has_deposit = d_minerals_5
									has_deposit = d_minerals_6
									has_deposit = d_minerals_7
									has_deposit = d_minerals_8
									has_deposit = d_minerals_9
									has_deposit = d_minerals_10
								}
							}
						}
						set_planet_flag = mining_habitat
					}
	
					if = {
						limit = {
							fromfrom.planet = {
								OR = {
									has_deposit = d_energy_1
									has_deposit = d_energy_2
									has_deposit = d_energy_3
									has_deposit = d_energy_4
									has_deposit = d_energy_5
									has_deposit = d_energy_6
									has_deposit = d_energy_7
									has_deposit = d_energy_8
									has_deposit = d_energy_9
									has_deposit = d_energy_10
								}
							}
						}
						set_planet_flag = energy_habitat
					}
	
					if = {
						limit = { fromfrom.planet = { has_deposit_for = shipclass_research_station } }
						set_planet_flag = research_habitat
					}
	
					if = {
						limit = {
							fromfrom.planet = {
								OR = {
									has_deposit = d_trade_value_1
									has_deposit = d_trade_value_2
									has_deposit = d_trade_value_3
									has_deposit = d_trade_value_4
									has_deposit = d_trade_value_5
									has_deposit = d_trade_value_6
									has_deposit = d_trade_value_7
									has_deposit = d_trade_value_8
									has_deposit = d_trade_value_9
									has_deposit = d_trade_value_10
								}
							}
						}
						set_planet_flag = commercial_habitat
					}
	
					if = {
						limit = {
							fromfrom.planet = { has_deposit = d_exotic_gases_1 }
						}
						add_deposit = d_hab_gas_1
					}
					if = {
						limit = {
							fromfrom.planet = { has_deposit = d_exotic_gases_2 }
						}
						add_deposit = d_hab_gas_2
					}
					if = {
						limit = {
							fromfrom.planet = { has_deposit = d_exotic_gases_3 }
						}
						add_deposit = d_hab_gas_3
					}
					if = {
						limit = {
							fromfrom.planet = { has_deposit = d_exotic_gases_4 }
						}
						add_deposit = d_hab_gas_4
					}
					if = {
						limit = {
							fromfrom.planet = { has_deposit = d_exotic_gases_5 }
						}
						add_deposit = d_hab_gas_5
					}
					if = {
						limit = {
							fromfrom.planet = { has_deposit = d_rare_crystals_1 }
						}
						add_deposit = d_hab_crystal_1
					}
					if = {
						limit = {
							fromfrom.planet = { has_deposit = d_rare_crystals_2 }
						}
						add_deposit = d_hab_crystal_2
					}
					if = {
						limit = {
							fromfrom.planet = { has_deposit = d_rare_crystals_3 }
						}
						add_deposit = d_hab_crystal_3
					}
					if = {
						limit = {
							fromfrom.planet = { has_deposit = d_rare_crystals_4 }
						}
						add_deposit = d_hab_crystal_4
					}
					if = {
						limit = {
							fromfrom.planet = { has_deposit = d_rare_crystals_5 }
						}
						add_deposit = d_hab_crystal_5
					}
					if = {
						limit = {
							fromfrom.planet = { has_deposit = d_volatile_motes_1 }
						}
						add_deposit = d_hab_mote_1
					}
					if = {
						limit = {
							fromfrom.planet = { has_deposit = d_volatile_motes_2 }
						}
						add_deposit = d_hab_mote_2
					}
					if = {
						limit = {
							fromfrom.planet = { has_deposit = d_volatile_motes_3 }
						}
						add_deposit = d_hab_mote_3
					}
					if = {
						limit = {
							fromfrom.planet = { has_deposit = d_volatile_motes_4 }
						}
						add_deposit = d_hab_mote_4
					}
					if = {
						limit = {
							fromfrom.planet = { has_deposit = d_volatile_motes_5 }
						}
						add_deposit = d_hab_mote_5
					}
					if = {
						limit = {
							fromfrom.planet = { has_deposit = d_zro_deposit_1 }
						}
						add_deposit = d_hab_zro_1
						set_planet_flag = research_habitat
					}
					if = {
						limit = {
							fromfrom.planet = { has_deposit = d_zro_deposit_2 }
						}
						add_deposit = d_hab_zro_2
						set_planet_flag = research_habitat
					}
					if = {
						limit = {
							fromfrom.planet = { has_deposit = d_zro_deposit_3 }
						}
						add_deposit = d_hab_zro_3
						set_planet_flag = research_habitat
					}
					if = {
						limit = {
							fromfrom.planet = { has_deposit = d_dark_matter_deposit_1 }
						}
						add_deposit = d_hab_dark_matter_1
						set_planet_flag = research_habitat
					}
					if = {
						limit = {
							fromfrom.planet = { has_deposit = d_dark_matter_deposit_2 }
						}
						add_deposit = d_hab_dark_matter_2
						set_planet_flag = research_habitat
					}
					if = {
						limit = {
							fromfrom.planet = { has_deposit = d_dark_matter_deposit_3 }
						}
						add_deposit = d_hab_dark_matter_3
						set_planet_flag = research_habitat
					}
					if = {
						limit = {
							fromfrom.planet = { has_deposit = d_living_metal_deposit }
						}
						add_deposit = d_hab_living_metal_1
						set_planet_flag = research_habitat
					}
					if = {
						limit = {
							fromfrom.planet = { has_deposit = d_alloys_1 }
						}
						add_deposit = d_hab_alloy_1
						set_planet_flag = mining_habitat
					}
					if = {
						limit = {
							fromfrom.planet = { has_deposit = d_alloys_2 }
						}
						add_deposit = d_hab_alloy_2
						set_planet_flag = mining_habitat
					}
					if = {
						limit = {
							fromfrom.planet = { has_deposit = d_alloys_3 }
						}
						add_deposit = d_hab_alloy_3
						set_planet_flag = mining_habitat
					}
					if = {
						limit = {
							fromfrom.planet = { has_deposit = d_alloys_4 }
						}
						add_deposit = d_hab_alloy_4
						set_planet_flag = mining_habitat
					}
					if = {
						limit = {
							fromfrom.planet = { has_deposit = d_alloys_5 }
						}
						add_deposit = d_hab_alloy_5
						set_planet_flag = mining_habitat
					}
					if = {
						limit = {
							fromfrom.planet = { has_deposit = d_nanites_deposit }
						}
						add_deposit = d_hab_nanites_1
						set_planet_flag = research_habitat
					}
				}
			}
		}
		else = {
			spawn_planet = {
				class = pc_GFnytp_habitis
				location = fromfrom.planet
				orbit_location = yes
				orbit_angle_offset = 45
				orbit_distance_offset = 9.899
				size = 15
				has_ring = yes
				init_effect = {
					set_name = "HABITAT_PLANET_NAME"
					set_surveyed = {
						surveyed = yes
						surveyor = FROM
					}
					set_all_comms_surveyed = yes
					clear_blockers = yes
					start_colony = {
						owner = root
						species = owner_main_species
					}
					set_planet_entity = {
						entity = GF_nyto_habita_entity
					}
					save_event_target_as = this_planet_habiti
					set_planet_flag = megastructure
					set_planet_flag = habitat
				}
			}
		}
		fromfrom.planet = {
			set_planet_flag = has_megastructure
			save_event_target_as = habitat_planet
			if = {
				limit = { has_orbital_station = yes }
				orbital_station = {
					dismantle = yes
				}
			}
		}
		if = {
			limit = { owner = { NOT = { has_authority = auth_GF_paradeus } } }
			remove_megastructure = fromfrom		
		}		
	}
}
